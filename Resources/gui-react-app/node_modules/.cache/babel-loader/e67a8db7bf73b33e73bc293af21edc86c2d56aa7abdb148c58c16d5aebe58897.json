{"ast":null,"code":"export async function WordReader(filePath, lineNumber) {\n  try {\n    const response = await fetch(filePath);\n    const text = await response.text();\n    const lines = text.split(\"\\n\");\n    return lineNumber >= 1 && lineNumber <= lines.length ? lines[lineNumber - 1] // Return specific line (1-based index)\n    : \"Line not found\";\n  } catch (error) {\n    console.error(\"Error reading file:\", error);\n    return \"Error loading file\";\n  }\n}\n_c = WordReader;\nvar _c;\n$RefreshReg$(_c, \"WordReader\");","map":{"version":3,"names":["WordReader","filePath","lineNumber","response","fetch","text","lines","split","length","error","console","_c","$RefreshReg$"],"sources":["/Users/kchong/Documents/Uni/year2/Term 2/GUI/GUI-labs/Resources/gui-react-app/src/WordReader.js"],"sourcesContent":["export async function WordReader(filePath, lineNumber) {\n    try {\n      const response = await fetch(filePath);\n      const text = await response.text();\n      const lines = text.split(\"\\n\");\n  \n      return lineNumber >= 1 && lineNumber <= lines.length\n        ? lines[lineNumber - 1] // Return specific line (1-based index)\n        : \"Line not found\";\n    } catch (error) {\n      console.error(\"Error reading file:\", error);\n      return \"Error loading file\";\n    }\n  }\n  "],"mappings":"AAAA,OAAO,eAAeA,UAAUA,CAACC,QAAQ,EAAEC,UAAU,EAAE;EACnD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,CAAC;IACtC,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;IAClC,MAAMC,KAAK,GAAGD,IAAI,CAACE,KAAK,CAAC,IAAI,CAAC;IAE9B,OAAOL,UAAU,IAAI,CAAC,IAAIA,UAAU,IAAII,KAAK,CAACE,MAAM,GAChDF,KAAK,CAACJ,UAAU,GAAG,CAAC,CAAC,CAAC;IAAA,EACtB,gBAAgB;EACtB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,OAAO,oBAAoB;EAC7B;AACF;AAACE,EAAA,GAbmBX,UAAU;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}