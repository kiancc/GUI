{"ast":null,"code":"var _jsxFileName = \"/Users/kchong/Documents/Uni/year2/Term 2/GUI/GUI-labs/Resources/gui-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { WordReader } from \"./WordReader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Submit({\n  onSubmitClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: onSubmitClick,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = Submit;\nfunction Square({\n  value,\n  onInputChange,\n  disabled,\n  bgColor\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"square\",\n      type: \"text\",\n      value: value || \"\",\n      onChange: e => onInputChange(e.target.value),\n      required: true,\n      minLength: \"1\",\n      maxLength: \"1\",\n      size: \"1\",\n      disabled: disabled,\n      style: {\n        backgroundColor: bgColor || \"white\",\n        color: \"black\",\n        fontSize: \"20px\",\n        textAlign: \"center\",\n        width: \"40px\",\n        height: \"40px\",\n        border: \"1px solid black\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Square;\nfunction App() {\n  _s();\n  const [rows, setRows] = useState(Array(5).fill().map(() => Array(5).fill(\"\")));\n  const [rowColors, setRowColors] = useState(Array(5).fill().map(() => Array(5).fill(\"white\"))); // Store colors\n  const [activeRow, setActiveRow] = useState(0);\n  const [line, setLine] = useState(\"\");\n  useEffect(() => {\n    async function fetchLine() {\n      const lineContent = await WordReader(\"/words.txt\", 3);\n      setLine(lineContent.trim()); // Ensure no extra spaces\n    }\n    fetchLine();\n  }, []);\n  function handleInputChange(value, i, j) {\n    if (i !== activeRow) return;\n    const newRows = rows.map((row, rowIndex) => rowIndex === i ? row.map((col, colIndex) => colIndex === j ? value : col) : row);\n    setRows(newRows);\n  }\n  function handleSubmitClick() {\n    if (activeRow >= 5) return;\n    const answer = line.split(\"\"); // Convert string to array\n    const currentRow = rows[activeRow];\n\n    // Create a copy of rowColors\n    const newRowColors = [...rowColors];\n\n    // Step 1: Determine correctness\n    const newColors = currentRow.map((char, i) => {\n      if (char === answer[i]) {\n        return \"green\"; // Correct position ✅\n      } else if (answer.includes(char)) {\n        return \"yellow\"; // Exists but in wrong position 🟡\n      } else {\n        return \"gray\"; // Not in word ❌\n      }\n    });\n    newRowColors[activeRow] = newColors;\n    setRowColors(newRowColors);\n\n    // Step 2: Check if user has won\n    if (currentRow.join(\"\") === line) {\n      alert(\"Congratulations! You got the correct answer! 🎉\");\n      return;\n    }\n\n    // Move to next row\n    setActiveRow(prev => prev + 1);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [[...Array(5)].map((_, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        style: {\n          display: \"flex\"\n        },\n        children: [...Array(5)].map((_, colIndex) => /*#__PURE__*/_jsxDEV(Square, {\n          value: rows[rowIndex][colIndex],\n          onInputChange: value => handleInputChange(value, rowIndex, colIndex),\n          disabled: rowIndex !== activeRow,\n          bgColor: rowColors[rowIndex][colIndex]\n        }, `${rowIndex}-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Submit, {\n        onSubmitClick: handleSubmitClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"dP4uOyWUZCpg+xoVhI5BQhfadBI=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Submit\");\n$RefreshReg$(_c2, \"Square\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useEffect","useState","WordReader","jsxDEV","_jsxDEV","Fragment","_Fragment","Submit","onSubmitClick","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","Square","value","onInputChange","disabled","bgColor","type","onChange","e","target","required","minLength","maxLength","size","style","backgroundColor","color","fontSize","textAlign","width","height","border","_c2","App","_s","rows","setRows","Array","fill","map","rowColors","setRowColors","activeRow","setActiveRow","line","setLine","fetchLine","lineContent","trim","handleInputChange","i","j","newRows","row","rowIndex","col","colIndex","handleSubmitClick","answer","split","currentRow","newRowColors","newColors","char","includes","join","alert","prev","_","display","_c3","$RefreshReg$"],"sources":["/Users/kchong/Documents/Uni/year2/Term 2/GUI/GUI-labs/Resources/gui-react-app/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { WordReader } from \"./WordReader\";\n\nfunction Submit({ onSubmitClick }) {\n  return (\n    <div>\n      <button className=\"square\" onClick={onSubmitClick}>\n        Submit\n      </button>\n    </div>\n  );\n}\n\nfunction Square({ value, onInputChange, disabled, bgColor }) {\n  return (\n    <div>\n      <input\n        className=\"square\"\n        type=\"text\"\n        value={value || \"\"}\n        onChange={(e) => onInputChange(e.target.value)}\n        required\n        minLength=\"1\"\n        maxLength=\"1\"\n        size=\"1\"\n        disabled={disabled}\n        style={{\n          backgroundColor: bgColor || \"white\",\n          color: \"black\",\n          fontSize: \"20px\",\n          textAlign: \"center\",\n          width: \"40px\",\n          height: \"40px\",\n          border: \"1px solid black\",\n        }}\n      />\n    </div>\n  );\n}\n\nfunction App() {\n  const [rows, setRows] = useState(Array(5).fill().map(() => Array(5).fill(\"\")));\n  const [rowColors, setRowColors] = useState(Array(5).fill().map(() => Array(5).fill(\"white\"))); // Store colors\n  const [activeRow, setActiveRow] = useState(0);\n  const [line, setLine] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchLine() {\n      const lineContent = await WordReader(\"/words.txt\", 3);\n      setLine(lineContent.trim()); // Ensure no extra spaces\n    }\n\n    fetchLine();\n  }, []);\n\n  function handleInputChange(value, i, j) {\n    if (i !== activeRow) return;\n    const newRows = rows.map((row, rowIndex) =>\n      rowIndex === i ? row.map((col, colIndex) => (colIndex === j ? value : col)) : row\n    );\n\n    setRows(newRows);\n  }\n\n  function handleSubmitClick() {\n    if (activeRow >= 5) return;\n\n    const answer = line.split(\"\"); // Convert string to array\n    const currentRow = rows[activeRow];\n\n    // Create a copy of rowColors\n    const newRowColors = [...rowColors];\n\n    // Step 1: Determine correctness\n    const newColors = currentRow.map((char, i) => {\n      if (char === answer[i]) {\n        return \"green\"; // Correct position ✅\n      } else if (answer.includes(char)) {\n        return \"yellow\"; // Exists but in wrong position 🟡\n      } else {\n        return \"gray\"; // Not in word ❌\n      }\n    });\n\n    newRowColors[activeRow] = newColors;\n    setRowColors(newRowColors);\n\n    // Step 2: Check if user has won\n    if (currentRow.join(\"\") === line) {\n      alert(\"Congratulations! You got the correct answer! 🎉\");\n      return;\n    }\n\n    // Move to next row\n    setActiveRow((prev) => prev + 1);\n  }\n\n  return (\n    <>\n      <div>\n        {[...Array(5)].map((_, rowIndex) => (\n          <div className=\"board-row\" key={rowIndex} style={{ display: \"flex\" }}>\n            {[...Array(5)].map((_, colIndex) => (\n              <Square\n                key={`${rowIndex}-${colIndex}`}\n                value={rows[rowIndex][colIndex]}\n                onInputChange={(value) => handleInputChange(value, rowIndex, colIndex)}\n                disabled={rowIndex !== activeRow}\n                bgColor={rowColors[rowIndex][colIndex]}\n              />\n            ))}\n          </div>\n        ))}\n\n        <Submit onSubmitClick={handleSubmitClick} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}