{"ast":null,"code":"var _jsxFileName = \"/Users/kchong/Documents/Uni/year2/Term 2/GUI/GUI-labs/Resources/minesweeper/src/components/Game.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './minefield/style.css';\nimport Flag from './gamestate/Flag';\nimport Reset from './gamestate/Reset';\nimport Timer from './gamestate/Timer';\nimport Board from './minefield/Board';\nimport { generateBoard } from './boardUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const [isActive, setIsActive] = useState(false);\n  const [flag, setFlag] = useState(false);\n  const [board, setBoard] = useState(generateBoard()); // Board state\n\n  // Function to generate a new board\n  const generateBoard = () => {\n    // Your logic to create a new board goes here (e.g., procedural generation)\n    return []; // Just an empty array for now\n  };\n  const handleFlagClicked = () => {\n    setFlag(prevFlag => !prevFlag); // Toggles the flag value\n  };\n  const handleReset = () => {\n    setIsActive(false);\n  };\n\n  // Function to reset the game\n  const handleGameReset = () => {\n    setIsActive(false); // Stops the timer\n    setFlag(false); // Resets the flag\n    // Add any other game state resets here (e.g., resetting the board)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      isActive: isActive,\n      setIsActive: setIsActive,\n      flag: flag,\n      setFlag: setFlag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-panel\",\n      children: [/*#__PURE__*/_jsxDEV(Flag, {\n        flag: flag,\n        onFlagClicked: handleFlagClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Reset, {\n        onReset: handleGameReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        isActive: isActive,\n        onReset: handleReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"50DO4N8yJ8QW3etHMNo/676iPe4=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","Flag","Reset","Timer","Board","generateBoard","jsxDEV","_jsxDEV","Game","_s","isActive","setIsActive","flag","setFlag","board","setBoard","handleFlagClicked","prevFlag","handleReset","handleGameReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFlagClicked","onReset","_c","$RefreshReg$"],"sources":["/Users/kchong/Documents/Uni/year2/Term 2/GUI/GUI-labs/Resources/minesweeper/src/components/Game.js"],"sourcesContent":["import { useState } from 'react';\nimport './minefield/style.css';\nimport Flag from './gamestate/Flag';\nimport Reset from './gamestate/Reset';\nimport Timer from './gamestate/Timer';\nimport Board from './minefield/Board';\nimport { generateBoard } from './boardUtils';\n\nfunction Game() {\n  const [isActive, setIsActive] = useState(false);\n  const [flag, setFlag] = useState(false);\n  const [board, setBoard] = useState(generateBoard());  // Board state\n\n  // Function to generate a new board\n  const generateBoard = () => {\n    // Your logic to create a new board goes here (e.g., procedural generation)\n    return []; // Just an empty array for now\n  };\n\n  const handleFlagClicked = () => {\n    setFlag((prevFlag) => !prevFlag); // Toggles the flag value\n  };\n\n  const handleReset = () => {\n    setIsActive(false);\n  };\n\n  // Function to reset the game\n  const handleGameReset = () => {\n    setIsActive(false);  // Stops the timer\n    setFlag(false);       // Resets the flag\n    // Add any other game state resets here (e.g., resetting the board)\n  };\n\n  return (\n    <div className=\"game\">\n      <Board isActive={isActive} setIsActive={setIsActive} flag={flag} setFlag={setFlag} />\n      <div className=\"control-panel\">\n        <Flag flag={flag} onFlagClicked={handleFlagClicked} />\n        <Reset onReset={handleGameReset} /> \n        <Timer isActive={isActive} onReset={handleReset} />\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,uBAAuB;AAC9B,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,SAASC,aAAa,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAACK,aAAa,CAAC,CAAC,CAAC,CAAC,CAAE;;EAEtD;EACA,MAAMA,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACA,OAAO,EAAE,CAAC,CAAC;EACb,CAAC;EAED,MAAMW,iBAAiB,GAAGA,CAAA,KAAM;IAC9BH,OAAO,CAAEI,QAAQ,IAAK,CAACA,QAAQ,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBP,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;;EAED;EACA,MAAMQ,eAAe,GAAGA,CAAA,KAAM;IAC5BR,WAAW,CAAC,KAAK,CAAC,CAAC,CAAE;IACrBE,OAAO,CAAC,KAAK,CAAC,CAAC,CAAO;IACtB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKa,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBd,OAAA,CAACH,KAAK;MAACM,QAAQ,EAAEA,QAAS;MAACC,WAAW,EAAEA,WAAY;MAACC,IAAI,EAAEA,IAAK;MAACC,OAAO,EAAEA;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrFlB,OAAA;MAAKa,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5Bd,OAAA,CAACN,IAAI;QAACW,IAAI,EAAEA,IAAK;QAACc,aAAa,EAAEV;MAAkB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtDlB,OAAA,CAACL,KAAK;QAACyB,OAAO,EAAER;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnClB,OAAA,CAACJ,KAAK;QAACO,QAAQ,EAAEA,QAAS;QAACiB,OAAO,EAAET;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CApCQD,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AAsCb,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}