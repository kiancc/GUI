{"ast":null,"code":"var _jsxFileName = \"/Users/kchong/Documents/Uni/year2/Term 2/GUI/GUI-labs/Resources/minesweeper/src/components/Game.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './minefield/style.css';\nimport Flag from './gamestate/Flag';\nimport Reset from './gamestate/Reset';\nimport Timer from './gamestate/Timer';\nimport Board from './minefield/Board';\nimport { generateBoard } from './minefield/boardUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const [isActive, setIsActive] = useState(false);\n  const [flag, setFlag] = useState(false);\n  const [board, setBoard] = useState(generateBoard());\n  const [time, setTime] = useState(0);\n  const [squares, setSquares] = useState(Array(64).fill(null));\n  const [gameOver, setGameOver] = useState(false);\n  const [timer, setTimer] = useState(0); // Track the time passed\n  const [intervalId, setIntervalId] = useState(null); // Store the interval ID for the timer\n\n  const handleFlagClicked = () => {\n    setFlag(prevFlag => !prevFlag);\n  };\n  const handleGameOver = () => {\n    setGameOver(true);\n  };\n  const handleGameReset = () => {\n    console.log(\"Resetting the game...\");\n    setIsActive(false); // Stops the timer\n    setFlag(false); // Resets the flag\n    setSquares(Array(64).fill(null));\n    setBoard(generateBoard()); // Resets the board to its initial state\n    setTime(0);\n    console.log(board);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      isActive: isActive,\n      setIsActive: setIsActive,\n      board: board,\n      squares: squares,\n      setSquares: setSquares,\n      flag: flag,\n      gameOver: gameOver,\n      setGameOver: handleGameOver\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-panel\",\n      children: [/*#__PURE__*/_jsxDEV(Flag, {\n        flag: flag,\n        onFlagClicked: handleFlagClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Reset, {\n        onReset: handleGameReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        isActive: isActive,\n        time: time,\n        setTime: setTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over\",\n      children: \"Game Over\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"6iZvlP6gSYgNBCdbyvDTy6K/Y/0=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","Flag","Reset","Timer","Board","generateBoard","jsxDEV","_jsxDEV","Game","_s","isActive","setIsActive","flag","setFlag","board","setBoard","time","setTime","squares","setSquares","Array","fill","gameOver","setGameOver","timer","setTimer","intervalId","setIntervalId","handleFlagClicked","prevFlag","handleGameOver","handleGameReset","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFlagClicked","onReset","_c","$RefreshReg$"],"sources":["/Users/kchong/Documents/Uni/year2/Term 2/GUI/GUI-labs/Resources/minesweeper/src/components/Game.js"],"sourcesContent":["import { useState } from 'react';\nimport './minefield/style.css';\nimport Flag from './gamestate/Flag';\nimport Reset from './gamestate/Reset';\nimport Timer from './gamestate/Timer';\nimport Board from './minefield/Board';\nimport { generateBoard } from './minefield/boardUtils';\n\nfunction Game() {\n  const [isActive, setIsActive] = useState(false);\n  const [flag, setFlag] = useState(false);\n  const [board, setBoard] = useState(generateBoard());\n  const [time, setTime] = useState(0);\n  const [squares, setSquares] = useState(Array(64).fill(null));\n  const [gameOver, setGameOver] = useState(false);\n  const [timer, setTimer] = useState(0); // Track the time passed\n  const [intervalId, setIntervalId] = useState(null); // Store the interval ID for the timer\n\n\n  const handleFlagClicked = () => {\n    setFlag((prevFlag) => !prevFlag);\n  };\n\n  const handleGameOver = () => {\n    setGameOver(true);\n  };\n\n  const handleGameReset = () => {\n    console.log(\"Resetting the game...\");\n    setIsActive(false);  // Stops the timer\n    setFlag(false);       // Resets the flag\n    setSquares(Array(64).fill(null));\n    setBoard(generateBoard());  // Resets the board to its initial state\n    setTime(0);\n    console.log(board);\n  };\n\n  return (\n    <div className=\"game\">\n      <Board \n        isActive={isActive} \n        setIsActive={setIsActive} \n        board={board} \n        squares={squares}\n        setSquares={setSquares}\n        flag={flag}\n        gameOver={gameOver}\n        setGameOver={handleGameOver}\n      />\n      <div className=\"control-panel\">\n        <Flag flag={flag} onFlagClicked={handleFlagClicked} />\n        <Reset onReset={handleGameReset} />\n        <Timer isActive={isActive} time={time} setTime={setTime} />\n      </div>\n      {gameOver && <div className=\"game-over\">Game Over</div>}\n    </div>\n  );\n}\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}